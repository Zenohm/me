import { S as SvelteComponentDev, i as init, s as safe_not_equal, a as space, e as element, t as text, c as claim_text, b as claim_element, d as children, f as detach, g as add_location, h as insert, j as append, n as noop } from './client.1c9a57af.js';

/* src/routes/index.svelte generated by Svelte v3.4.4 */

const file = "src/routes/index.svelte";

function create_fragment(ctx) {
	var t0, div1, div0, h1, t1, t2, p, t3, a0, t4, t5, t6, figure, img, t7, figcaption, t8, a1, t9;

	return {
		c: function create() {
			t0 = space();
			div1 = element("div");
			div0 = element("div");
			h1 = element("h1");
			t1 = text("Welcome to your new Sapper Blog");
			t2 = space();
			p = element("p");
			t3 = text("Check out the docs on ");
			a0 = element("a");
			t4 = text("GitHub");
			t5 = text(" to get started.");
			t6 = space();
			figure = element("figure");
			img = element("img");
			t7 = space();
			figcaption = element("figcaption");
			t8 = text("Illustration thanks to ");
			a1 = element("a");
			t9 = text("Undraw");
			this.h();
		},

		l: function claim(nodes) {
			t0 = claim_text(nodes, "\n\n");

			div1 = claim_element(nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			div0 = claim_element(div1_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			h1 = claim_element(div0_nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t1 = claim_text(h1_nodes, "Welcome to your new Sapper Blog");
			h1_nodes.forEach(detach);
			t2 = claim_text(div0_nodes, "\n    ");

			p = claim_element(div0_nodes, "P", { class: true }, false);
			var p_nodes = children(p);

			t3 = claim_text(p_nodes, "Check out the docs on ");

			a0 = claim_element(p_nodes, "A", { href: true, target: true }, false);
			var a0_nodes = children(a0);

			t4 = claim_text(a0_nodes, "GitHub");
			a0_nodes.forEach(detach);
			t5 = claim_text(p_nodes, " to get started.");
			p_nodes.forEach(detach);
			div0_nodes.forEach(detach);
			t6 = claim_text(div1_nodes, "\n\n  ");

			figure = claim_element(div1_nodes, "FIGURE", { class: true }, false);
			var figure_nodes = children(figure);

			img = claim_element(figure_nodes, "IMG", { alt: true, src: true, class: true }, false);
			var img_nodes = children(img);

			img_nodes.forEach(detach);
			t7 = claim_text(figure_nodes, "\n    ");

			figcaption = claim_element(figure_nodes, "FIGCAPTION", { class: true }, false);
			var figcaption_nodes = children(figcaption);

			t8 = claim_text(figcaption_nodes, "Illustration thanks to ");

			a1 = claim_element(figcaption_nodes, "A", { href: true, target: true }, false);
			var a1_nodes = children(a1);

			t9 = claim_text(a1_nodes, "Undraw");
			a1_nodes.forEach(detach);
			figcaption_nodes.forEach(detach);
			figure_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			document.title = "Sapper Blog Template";
			h1.className = "svelte-1lllleo";
			add_location(h1, file, 68, 4, 921);
			a0.href = "https://www.github.com/Charca/sapper-blog-template";
			a0.target = "_blank";
			add_location(a0, file, 69, 29, 991);
			p.className = "svelte-1lllleo";
			add_location(p, file, 69, 4, 966);
			div0.className = "home-copy svelte-1lllleo";
			add_location(div0, file, 67, 2, 893);
			img.alt = "Person typing on laptop";
			img.src = "undraw-illustration.svg";
			img.className = "svelte-1lllleo";
			add_location(img, file, 73, 4, 1124);
			a1.href = "https://undraw.co";
			a1.target = "_blank";
			add_location(a1, file, 74, 39, 1229);
			figcaption.className = "svelte-1lllleo";
			add_location(figcaption, file, 74, 4, 1194);
			figure.className = "svelte-1lllleo";
			add_location(figure, file, 72, 2, 1111);
			div1.className = "home-container svelte-1lllleo";
			add_location(div1, file, 66, 0, 862);
		},

		m: function mount(target, anchor) {
			insert(target, t0, anchor);
			insert(target, div1, anchor);
			append(div1, div0);
			append(div0, h1);
			append(h1, t1);
			append(div0, t2);
			append(div0, p);
			append(p, t3);
			append(p, a0);
			append(a0, t4);
			append(p, t5);
			append(div1, t6);
			append(div1, figure);
			append(figure, img);
			append(figure, t7);
			append(figure, figcaption);
			append(figcaption, t8);
			append(figcaption, a1);
			append(a1, t9);
		},

		p: noop,
		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach(t0);
				detach(div1);
			}
		}
	};
}

class Index extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, []);
	}
}

export default Index;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguZTFmMDZkOTMuanMiLCJzb3VyY2VzIjpbXSwic291cmNlc0NvbnRlbnQiOltdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
